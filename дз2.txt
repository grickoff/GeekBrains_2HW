# Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

first_list = ['слово', 123, 1.2, None, True, [123,234], {'123': '234', '432': '567'}, (2.2, 'драсти') ]
print(type(first_list[0]))
print(type(first_list[1]))
print(type(first_list[2]))
print(type(first_list[3]))
print(type(first_list[4]))
print(type(first_list[5]))
print(type(first_list[6]))
print(type(first_list[7]))




# Для списка реализовать обмен значений соседних элементов, т.е.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().
custom_list = []
while 'end' not in custom_list: # хочу использовать эту петлю, чтобы по одной цифре можно было вводить, а не числу
    custom_list.append(input('Введите цифру или "end" для завершения внесения в список '))

custom_list.pop()

if len(custom_list) % 2 != 0:
    extra = custom_list[-1] # изолирую лишнюю цифру
    custom_list.pop()

custom_list[::2], custom_list[1::2] = custom_list[1::2], custom_list[::2]

custom_list.append(extra)
print(custom_list)




# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

#почему нельзя присвоить несколько ключей (или список) к одному значению???
m_list = ['зима', 'весна', 'лето', 'осень']
m_dict = { 1 : m_list[0], 2 : m_list[0], 12 : m_list[0],  3 : m_list[1], 4 : m_list[1], 5 : m_list[1],
           6 : m_list[2], 7 : m_list[2], 8 : m_list[2], 9 : m_list [3], 10 : m_list [3], 11 : m_list [3]}

print(m_dict.get(int( input( 'напиши номер месяца ' ))))







# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.

n = 1
user_pr = input('Введите строку из нескольких слов, разделенных пробелами ').split()
for i in user_pr :
    print(n, i[0:10])
    n += 1





# Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.

# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].


my_favorite_list = [7, 5, 3, 3, 2]
my_favorite_list.append(int(input('Введите номер ')))
my_favorite_list.sort(reverse = True)
print(my_favorite_list)








# Реализовать структуру данных «Товары».
# Она должна представлять собой список кортежей. Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Необходимо собрать аналитику о товарах.
# Реализовать словарь, в котором каждый ключ — характеристика товара, например название,
# а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }




 
list_to_buy =[]
n = 0

while n != 3 :
    n += 1
    thing = (n, dict( name = input('Имя товара '), price = input('Цена '), how_many = input('Сколько '),
             unit = input('в чем измеряем ')))
    list_to_buy.append(thing)

print(list_to_buy)

print(list_to_buy(thing(dict.keys()))) # не работает((( но я сделал первую часть





